%main#contents.statistics(role="main")
  =h1 "Statistiques sur le système de suivi"
  - width_stats = 400

  .body
    %p
      Ces statistiques ne prennent en compte que le système de suivi, et pas les demandes envoyées par courriel, messagerie instantanée, lettres d'avocat, kernel panic et autres erreurs Nginx.
    %strong
      Statistiques mises à jour le #{l Time.now}

    %p
      #{pluralize @stats.states["opened"], "entrée ouverte", "entrées ouvertes" },
      #{pluralize @stats.states["invalid"], "invalide"} et
      #{pluralize @stats.states["fixed"], "fermée"}, total #{pluralize @stats.states["total"], "envoyée"}
      par #{pluralize @stats.distinct_users, "visiteur"} (en groupant les anonymes).
    %p
      Le temps moyen de résolution est de #{pluralize @stats.average_time, "jour"}.
    %p
      La moitié des entrées fermées ont été traitées en moins de #{pluralize @stats.median_time, "jour"}.

    - if @stats.top_reporters.size() > 0
      - maxval = @stats.top_reporters.map {|a| a["cnt"] }.max
      %h2#nbouvertes Utilisateurs ayant ouvert le plus grand nombre d'entrées
      %table
        %tr
          %th Personne
          %th Entrées ouvertes
        - @stats.top_reporters.each do |user|
          %tr
            %td{'class'=>'stat'}
              =link_to(user["name"], "/users/#{user["name"]}")
            %td
              .stat.misc(style="width: #{(width_stats * user["cnt"] / maxval).to_i}px;")= user["cnt"]

    - if @stats.good_workers.size() > 0
      - maxval = @stats.good_workers.map {|a| a["cnt"] }.max
      %h2#nbfermees Nombre d'entrées fermées par les admins
      %table
        %tr
          %th Personne
          %th Entrées fermées
        - @stats.good_workers.each do |worker|
          %tr
            %td{'class'=>'stat'}
              = link_to(worker["name"], "/users/#{worker["name"]}")
            %td
              .stat.misc(style="width: #{(width_stats * worker["cnt"] / maxval).to_i}px;")= worker["cnt"]

    - if @stats.by_year.size() > 0
      %h2#an Entrées classées par année
      %p
        État des entrées dans le système de suivi (classées par date d'ouverture)
      %table
        %tr
          %th Année
          %th Entrées ouvertes
          %th Entrées corrigées
          %th Entrées invalidées
          %th Total
        - @stats.by_year.each do |year,states|
          %tr
            %td{'class'=>'stat'}= year
            %td
              .stat.opened(style="width:#{width_stats * states["opened"] / maxval / 3}px;")= states["opened"]
            %td
              .stat.fixed(style="width:#{width_stats * states["fixed"] / maxval / 3}px;")= states["fixed"]
            %td
              .stat.invalid(style="width:#{width_stats * states["invalid"] / maxval / 3}px;")= states["invalid"]
            %td.total= states.values.sum

    -if @stats.states["total"] > 0
      %h2#mois Évolution du nombre d'entrées dans le système de suivi
      - maxval = @stats.by_month.values.max {|a,b| a.values.max <=> b.values.max}.values.max
      %table
        %tr
          %th Mois
          %th Entrées restantes
          %th Nouvelles entrées
          %th Total ouvertes
          %th Entrées corrigées
          %th Entrées invalidées
        - total = 0
        - @stats.by_month.sort.each do |month|
          - opened  = month[1]["opened"]  || 0
          - fixed   = month[1]["fixed"]   || 0
          - invalid = month[1]["invalid"] || 0
          %tr
            %td{'class'=>'stat'}
              = month[0].sub(/(\d{4})(\d{2})/, '\2 \1')
            %td
              .stat.remaining(style="width:#{width_stats * total / maxval / 4}px;")= total
            %td
              .stat.month_new(style="width:#{width_stats * opened / maxval / 4}px;")= opened
            %td
              = total = total + opened - fixed - invalid
            %td
              .stat.month_fixed(style="width:#{width_stats * fixed / maxval / 4}px;")= fixed
            %td
              .stat.month_invalid(style="width:#{width_stats * invalid / maxval / 4}px;")= invalid

      %h2#categorie État des entrées dans le système de suivi par catégorie
      - maxval = @stats.by_category.max {|a,b| a["cnt"] <=> b["cnt"]}["cnt"]
      %table
        %tr
          %th Catégorie
          %th Nombre d'entrées
        - @stats.by_category.each do |category|
          %tr
            %td{'class'=>'stat'}= category["name"]
            %td
              .stat.category(style="width: #{width_stats * category["cnt"] / maxval}px;")= category["cnt"]

    %h2#ohloh Statistiques Ohloh
    %script(src="http://www.ohloh.net/p/488790/widgets/project_languages.js")
    %script(src="http://www.ohloh.net/p/488790/widgets/project_basic_stats.js")
    %script(src="http://www.ohloh.net/p/488790/widgets/project_cocomo.js")
